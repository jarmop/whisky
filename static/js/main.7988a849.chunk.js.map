{"version":3,"sources":["Catalog/library.ts","types.ts","Catalog/List.tsx","Catalog/Catalog.tsx","data/distilleries.ts","DistilleryMap/mapboxMap.ts","DistilleryMap/DistilleryMap.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["formatPrice","price","toFixed","date","Date","setUTCHours","Regions","TODAY","JSON","parse","stringify","List","products","className","icon","faAngleUp","map","product","key","id","timeAdded","name","relativePrice","abv","size","toLocaleDateString","country","notes","allProducts","allProductsJSON","highestRelativePrice","countryOptions","reduce","accumulator","includes","push","Catalog","props","state","selectedCountry","minRelativePrice","maxRelativePrice","this","setState","min","max","filter","sort","a","b","sortOrder","value","getTime","Object","keys","forEach","orderKey","valA","valB","onChange","event","setSelectedCountry","target","type","defaultValue","setPriceRange","parseFloat","length","React","Component","distilleries","coordinates","lon","lat","region","CampbelTown","Highlands","Islands","Islay","Lowlands","Speyside","scotlandCenter","DistilleryMap","useEffect","containerId","mapboxgl","accessToken","Map","container","style","center","zoom","distillery","marker","Marker","setLngLat","setPopup","Popup","closeButton","setHTML","addTo","markerDiv","getElement","addEventListener","togglePopup","drawMap","App","homeUrl","process","catalogUrl","to","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7988a849.chunk.js","sourcesContent":["export function formatPrice(price: number) {\n  return price.toFixed(2);\n}\n\nconst date = new Date();\ndate.setUTCHours(0, 0, 0, 0);\nexport const TODAY = JSON.parse(JSON.stringify(date));\n","export type Coordinates = {\n    lon: number,\n    lat: number,\n}\n\nexport type Distillery = {\n    name: string,\n    coordinates: Coordinates,\n    region: Regions,\n}\n\nexport enum Regions {\n    Speyside,\n    Highlands,\n    Lowlands,\n    Islay,\n    Islands,\n    CampbelTown,\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { formatPrice, TODAY } from './library';\nimport { Product } from './types';\n\ninterface ListParams {\n  products: Product[],\n}\n\nconst List = ({ products }: ListParams) => (\n  <table className=\"table\">\n    <thead>\n      <tr>\n        <th>\n          Name\n        </th>\n        <th className=\"sorting\">\n          Price per 0.7 l of 40 %\n          <FontAwesomeIcon icon={faAngleUp} />\n        </th>\n        <th>\n          Abv\n        </th>\n        <th>\n          Price\n        </th>\n        <th>\n          Size\n        </th>\n        <th>\n          Added\n        </th>\n        <th>\n          Country\n        </th>\n        <th>\n          Notes\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      {products.map((product) => (\n        <tr key={product.id} className={product.timeAdded === TODAY ? 'added-today' : ''}>\n          <td>\n            {product.name}\n          </td>\n          <td>\n            {formatPrice(product.relativePrice)}\n            {' '}\n            €\n          </td>\n          <td>\n            {product.abv}\n            {' '}\n            %\n          </td>\n          <td>\n            {formatPrice(product.price)}\n            {' '}\n            €\n          </td>\n          <td>\n            {product.size}\n            {' '}\n            l\n          </td>\n          <td>\n            {(new Date(product.timeAdded)).toLocaleDateString()}\n          </td>\n          <td>\n            {product.country}\n          </td>\n          <td>\n            {product.notes}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nexport default List;\n","import React from 'react';\nimport './Catalog.css';\nimport allProductsJSON from 'data/alko.json';\nimport List from './List';\nimport { formatPrice, TODAY } from './library';\nimport { Product } from './types';\n\nconst allProducts: Product[] = allProductsJSON;\n\nconst defaultMinRelativePrice = 40;\nlet highestRelativePrice = 0;\nconst countryOptions = allProducts.reduce(\n  (accumulator: string[], product) => {\n    if (product.relativePrice > highestRelativePrice) {\n      highestRelativePrice = product.relativePrice;\n    }\n    if (!accumulator.includes(product.country)) {\n      accumulator.push(product.country);\n    }\n    return accumulator;\n  },\n  [],\n);\n\ntype State = {\n  selectedCountry: string,\n  minRelativePrice: number,\n  maxRelativePrice: number,\n}\n\nclass Catalog extends React.Component {\n  readonly state: State;\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      selectedCountry: 'Skotlanti',\n      minRelativePrice: defaultMinRelativePrice,\n      maxRelativePrice: highestRelativePrice,\n    };\n  }\n\n  setSelectedCountry(country: string) {\n    this.setState({\n      selectedCountry: country,\n    });\n  }\n\n  setPriceRange(min: number, max: number) {\n    this.setState({\n      minRelativePrice: min,\n      maxRelativePrice: max,\n    });\n  }\n\n  render() {\n    const { selectedCountry, minRelativePrice, maxRelativePrice } = this.state;\n    const products = allProducts.filter((product) => product.country === selectedCountry\n      && product.relativePrice > minRelativePrice\n      && product.relativePrice < maxRelativePrice);\n\n    products.sort((a: Product, b: Product) => {\n      const sortOrder: {[key: string]: string} = {\n        country: 'asc',\n        relativePrice: 'asc',\n      };\n\n      // Sort new whiskies first\n      if (a.timeAdded === TODAY || b.timeAdded === TODAY) {\n        const value = (new Date(b.timeAdded)).getTime() - (new Date(a.timeAdded)).getTime();\n        if (value !== 0) {\n          return value;\n        }\n      }\n\n      Object.keys(sortOrder).forEach((orderKey) => {\n        const valA = a[orderKey];\n        const valB = b[orderKey];\n        if (valA < valB) {\n          return sortOrder[orderKey] === 'asc' ? -1 : 1;\n        } if (valA > valB) {\n          return sortOrder[orderKey] === 'asc' ? 1 : -1;\n        }\n      });\n      return 0;\n    });\n\n    return (\n      <div>\n        <div className=\"filter-container\">\n          <select\n            onChange={(event) => this.setSelectedCountry(\n              event.target.value,\n            )}\n            value={selectedCountry}\n          >\n            {countryOptions.map(\n              (country) => <option key={country} value={country}>{country}</option>,\n            )}\n          </select>\n          <div className=\"filter\">\n            <label>Price range: </label>\n            <input\n              className=\"priceRangeInput\"\n              name=\"minprice\"\n              type=\"number\"\n              defaultValue={formatPrice(minRelativePrice)}\n              onChange={\n                (event) => this.setPriceRange(parseFloat(event.target.value), maxRelativePrice)\n              }\n            />\n            {' - '}\n            <input\n              className=\"priceRangeInput\"\n              name=\"maxprice\"\n              type=\"number\"\n              defaultValue={formatPrice(maxRelativePrice)}\n              onChange={\n                (event) => this.setPriceRange(minRelativePrice, parseFloat(event.target.value))\n              }\n            />\n          </div>\n        </div>\n\n        {` Products: ${products.length}`}\n\n        <List products={products} />\n      </div>\n    );\n  }\n}\n\nexport default Catalog;\n","import { Distillery, Regions } from 'types';\n\nconst distilleries: Distillery[] = [\n  {\n    name: 'Springbank',\n    coordinates: {\n      lon: -5.6085,\n      lat: 55.4265,\n    },\n    region: Regions.CampbelTown,\n  },\n  // {\n  //   name: 'Edradour',\n  //   coordinates: {\n  //     lon: -3.7010,\n  //     lat: 56.7020,\n  //   },\n  //   region: Regions.Highlands,\n  // },\n  {\n    name: 'Dalwhinnie',\n    coordinates: {\n      lon: -4.2391,\n      lat: 56.9400,\n    },\n    region: Regions.Highlands,\n  },\n  {\n    name: 'Old pulteney',\n    coordinates: {\n      lon: -3.0847,\n      lat: 58.4344,\n    },\n    region: Regions.Highlands,\n  },\n  {\n    name: 'Highland Park',\n    coordinates: {\n      lon: -2.9554,\n      lat: 58.9687,\n    },\n    region: Regions.Islands,\n  },\n  {\n    name: 'Talisker',\n    coordinates: {\n      lon: -6.3567,\n      lat: 57.3023,\n    },\n    region: Regions.Islands,\n  },\n  {\n    name: 'Tobermory',\n    coordinates: {\n      lon: -6.0698,\n      lat: 56.6207,\n    },\n    region: Regions.Islands,\n  },\n  {\n    name: 'Ardbeg',\n    coordinates: {\n      lon: -6.1083,\n      lat: 55.6404,\n    },\n    region: Regions.Islay,\n  },\n  {\n    name: 'Bowmore',\n    coordinates: {\n      lon: -6.2900,\n      lat: 55.7569,\n    },\n    region: Regions.Islay,\n  },\n  {\n    name: 'Bruichladdich',\n    coordinates: {\n      lon: -6.3625,\n      lat: 55.7663,\n    },\n    region: Regions.Islay,\n  },\n  {\n    name: 'Bunnahabhain',\n    coordinates: {\n      lon: -6.1257,\n      lat: 55.8830,\n    },\n    region: Regions.Islay,\n  },\n  {\n    name: 'Caol Ila',\n    coordinates: {\n      lon: -6.1093,\n      lat: 55.8545,\n    },\n    region: Regions.Islay,\n  },\n  {\n    name: 'Kilchoman',\n    coordinates: {\n      lon: -6.4305,\n      lat: 55.7869,\n    },\n    region: Regions.Islay,\n  },\n  {\n    name: 'Laphroaig',\n    coordinates: {\n      lon: -6.1430,\n      lat: 55.6258,\n    },\n    region: Regions.Islay,\n  },\n  {\n    name: 'Auchentoshan',\n    coordinates: {\n      lon: -4.4381,\n      lat: 55.9229,\n    },\n    region: Regions.Lowlands,\n  },\n  {\n    name: 'Aberlour',\n    coordinates: {\n      lon: -3.2282,\n      lat: 57.4670,\n    },\n    region: Regions.Speyside,\n  },\n  {\n    name: 'Cragganmore',\n    coordinates: {\n      lon: -3.3953,\n      lat: 57.4099,\n    },\n    region: Regions.Speyside,\n  },\n  {\n    name: 'GlenDronach',\n    coordinates: {\n      lon: -2.6259,\n      lat: 57.4844,\n    },\n    region: Regions.Speyside,\n  },\n  {\n    name: 'Glenfiddich',\n    coordinates: {\n      lon: -3.1287,\n      lat: 57.4548,\n    },\n    region: Regions.Speyside,\n  },\n  {\n    name: 'Macallan',\n    coordinates: {\n      lon: -3.2068,\n      lat: 57.4848,\n    },\n    region: Regions.Speyside,\n  },\n];\n\nexport default distilleries;\n","import mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nimport { Coordinates } from 'types';\nimport distilleries from 'data/distilleries';\nimport addComplexPopup from './mapboxComplexPopupExample';\n\nconst scotlandCenter: Coordinates = {\n  lon: -4.5518,\n  lat: 57.0042,\n};\n\nexport default function drawMap(containerId: string) {\n  mapboxgl.accessToken = 'pk.eyJ1IjoiamFybW9wIiwiYSI6ImNrOW8xM2lxNzAxbmYzbHJ5a200aXNjeGYifQ.HcClAUYB_z8izQnQS3TQ5A';\n  const map = new mapboxgl.Map({\n    container: containerId,\n    style: 'mapbox://styles/mapbox/streets-v9',\n    center: [scotlandCenter.lon, scotlandCenter.lat],\n    zoom: 6,\n  });\n\n  distilleries.forEach((distillery) => {\n    const marker = new mapboxgl.Marker()\n      .setLngLat([distillery.coordinates.lon, distillery.coordinates.lat])\n      .setPopup(\n        new mapboxgl.Popup({\n          // offset: 25,\n          closeButton: false,\n        }).setHTML(`<h3>${distillery.name}</h3>`),\n      )\n      .addTo(map);\n\n    const markerDiv = marker.getElement();\n    markerDiv.addEventListener('mouseenter', () => marker.togglePopup());\n    markerDiv.addEventListener('mouseleave', () => marker.togglePopup());\n\n    return marker;\n  });\n\n  // addComplexPopup(map, [scotlandCenter.lon, scotlandCenter.lat]);\n}\n","import React, { useEffect } from 'react';\n\nimport './DistilleryMap.css';\n// import drawMap from './leafletMap';\nimport drawMap from './mapboxMap';\n\nconst CONTAINER_ID = 'mapid';\n\nexport default function DistilleryMap() {\n  useEffect(() => drawMap(CONTAINER_ID));\n  return (\n    <div>\n      <div id={CONTAINER_ID} />\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport Catalog from 'Catalog/Catalog';\nimport DistilleryMap from 'DistilleryMap/DistilleryMap';\n\nexport default function App() {\n  const homeUrl = `${process.env.PUBLIC_URL}/`;\n  const catalogUrl = `${process.env.PUBLIC_URL}/catalog`;\n  return (\n    <Router>\n      <Link to={homeUrl}>Home</Link>\n      {' | '}\n      <Link to={catalogUrl}>Catalog</Link>\n      <Switch>\n        <Route path={catalogUrl}>\n          <Catalog />\n        </Route>\n        <Route path={homeUrl}>\n          <DistilleryMap />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}